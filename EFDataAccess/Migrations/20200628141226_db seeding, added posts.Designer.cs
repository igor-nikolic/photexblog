// <auto-generated />
using System;
using EFDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFDataAccess.Migrations
{
    [DbContext(typeof(PhoTexBlogContext))]
    [Migration("20200628141226_db seeding, added posts")]
    partial class dbseedingaddedposts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Domain.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "post1post1post1post1post1post1post1post1post1post1post1post1post1post1",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(6954),
                            PhotoPath = "images/1.png",
                            Title = "Post 1",
                            TopicId = 6,
                            UserId = 3,
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            Content = "post2post2post2post2post2post2post2post2post2post2post2",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7132),
                            PhotoPath = "images/2.png",
                            Title = "Post 2",
                            TopicId = 2,
                            UserId = 4,
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            Content = "post3post3post3post3post3post3post3",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7149),
                            PhotoPath = "images/3.png",
                            Title = "Post 3",
                            TopicId = 5,
                            UserId = 4,
                            Visible = true
                        },
                        new
                        {
                            Id = 4,
                            Content = "post4post4post4post4post4post4post4post4post4post4",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7161),
                            PhotoPath = "images/4.png",
                            Title = "Post 4",
                            TopicId = 7,
                            UserId = 1,
                            Visible = true
                        },
                        new
                        {
                            Id = 5,
                            Content = "post1post1post1post1post1post1post1post1post1post1post1post1post1post1",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7173),
                            PhotoPath = "images/5.png",
                            Title = "Post 5",
                            TopicId = 7,
                            UserId = 4,
                            Visible = true
                        },
                        new
                        {
                            Id = 6,
                            Content = "post2post2post2post2post2post2post2post2post2",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7190),
                            PhotoPath = "images/6.png",
                            Title = "Post 6",
                            TopicId = 6,
                            UserId = 6,
                            Visible = true
                        },
                        new
                        {
                            Id = 7,
                            Content = "post3post3post3post3post3post3post3",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7201),
                            PhotoPath = "images/7.png",
                            Title = "Post 7",
                            TopicId = 5,
                            UserId = 2,
                            Visible = true
                        },
                        new
                        {
                            Id = 8,
                            Content = "post4post4post4post4post4post4post4post4post4",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7213),
                            PhotoPath = "images/8.png",
                            Title = "Post 8",
                            TopicId = 4,
                            UserId = 6,
                            Visible = true
                        },
                        new
                        {
                            Id = 9,
                            Content = "post1post1post1post1post1post1post1post1",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7225),
                            PhotoPath = "images/9.png",
                            Title = "Post 9",
                            TopicId = 3,
                            UserId = 7,
                            Visible = true
                        },
                        new
                        {
                            Id = 10,
                            Content = "post2post2post2post2post2post2post2post2post2",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7239),
                            PhotoPath = "images/10.jpg",
                            Title = "Post 10",
                            TopicId = 4,
                            UserId = 7,
                            Visible = true
                        },
                        new
                        {
                            Id = 11,
                            Content = "post3post3post3post3post3post3post3",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7250),
                            PhotoPath = "images/11.jpg",
                            Title = "Post 11",
                            TopicId = 5,
                            UserId = 2,
                            Visible = true
                        },
                        new
                        {
                            Id = 12,
                            Content = "post3post3post3post3post3post3post3",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7261),
                            PhotoPath = "images/12.jpg",
                            Title = "Post 12",
                            TopicId = 4,
                            UserId = 3,
                            Visible = true
                        },
                        new
                        {
                            Id = 13,
                            Content = "post1post2post3post4",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7273),
                            PhotoPath = "images/13.jpg",
                            Title = "Post 13",
                            TopicId = 4,
                            UserId = 6,
                            Visible = true
                        },
                        new
                        {
                            Id = 14,
                            Content = "post4post4post431",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7284),
                            PhotoPath = "images/14.jpg",
                            Title = "Post 14",
                            TopicId = 7,
                            UserId = 5,
                            Visible = true
                        },
                        new
                        {
                            Id = 15,
                            Content = "post4post4post431",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7295),
                            PhotoPath = "images/15.jpg",
                            Title = "Post 15",
                            TopicId = 3,
                            UserId = 7,
                            Visible = true
                        },
                        new
                        {
                            Id = 16,
                            Content = "post1post1post2post3",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7306),
                            PhotoPath = "images/16.jpg",
                            Title = "Post 16",
                            TopicId = 7,
                            UserId = 2,
                            Visible = true
                        },
                        new
                        {
                            Id = 17,
                            Content = "post1post1post2post3post2",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7317),
                            PhotoPath = "images/17.jpg",
                            Title = "Post 17",
                            TopicId = 4,
                            UserId = 7,
                            Visible = true
                        },
                        new
                        {
                            Id = 18,
                            Content = "post4post4post4post4post4post4post4",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7331),
                            PhotoPath = "images/18.jpg",
                            Title = "Post 18",
                            TopicId = 5,
                            UserId = 2,
                            Visible = true
                        },
                        new
                        {
                            Id = 19,
                            Content = "post2post2post2post2",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7406),
                            PhotoPath = "images/19.jpg",
                            Title = "Post 19",
                            TopicId = 1,
                            UserId = 5,
                            Visible = true
                        },
                        new
                        {
                            Id = 20,
                            Content = "post12post1post1post1post1",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7420),
                            PhotoPath = "images/20.jpg",
                            Title = "Post 20",
                            TopicId = 7,
                            UserId = 4,
                            Visible = true
                        },
                        new
                        {
                            Id = 21,
                            Content = "post12post1post1post1post4",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7432),
                            PhotoPath = "images/21.jpg",
                            Title = "Post 21",
                            TopicId = 2,
                            UserId = 2,
                            Visible = true
                        },
                        new
                        {
                            Id = 22,
                            Content = "post1post2post3post4",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7443),
                            PhotoPath = "images/22.jpg",
                            Title = "Post 22",
                            TopicId = 2,
                            UserId = 7,
                            Visible = true
                        },
                        new
                        {
                            Id = 23,
                            Content = "post1post2post3post4",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7455),
                            PhotoPath = "images/23.jpg",
                            Title = "Post 23",
                            TopicId = 4,
                            UserId = 2,
                            Visible = true
                        },
                        new
                        {
                            Id = 24,
                            Content = "this is a random content",
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(7468),
                            PhotoPath = "images/24.jpg",
                            Title = "Post 24",
                            TopicId = 1,
                            UserId = 3,
                            Visible = true
                        });
                });

            modelBuilder.Entity("Domain.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Domain.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 986, DateTimeKind.Local).AddTicks(2172),
                            Name = "Topic 1",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 993, DateTimeKind.Local).AddTicks(4659),
                            Name = "Topic 2",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 993, DateTimeKind.Local).AddTicks(4756),
                            Name = "Topic 3",
                            Visible = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 993, DateTimeKind.Local).AddTicks(4769),
                            Name = "Topic 4",
                            Visible = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 993, DateTimeKind.Local).AddTicks(4780),
                            Name = "Topic 5",
                            Visible = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 993, DateTimeKind.Local).AddTicks(4798),
                            Name = "Topic 6",
                            Visible = true
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 993, DateTimeKind.Local).AddTicks(4808),
                            Name = "Topic 7",
                            Visible = true
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 993, DateTimeKind.Local).AddTicks(4818),
                            Name = "Topic 8",
                            Visible = true
                        });
                });

            modelBuilder.Entity("Domain.UseCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UseCases");
                });

            modelBuilder.Entity("Domain.UseCaseLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UseCaseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UseCaseId");

                    b.HasIndex("UserId");

                    b.ToTable("UseCaseLogs");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(666),
                            Email = "pera@gmail.com",
                            FirstName = "Pera",
                            LastName = "Peric",
                            Password = "7guOFkbnL2s5eA0xSepLNiQdTQ+Rj8Oe0t6HR2KpKlw=",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(929),
                            Email = "marko@gmail.com",
                            FirstName = "Marko",
                            LastName = "Markovic",
                            Password = "7guOFkbnL2s5eA0xSepLNiQdTQ+Rj8Oe0t6HR2KpKlw=",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(952),
                            Email = "petar@gmail.com",
                            FirstName = "Petar",
                            LastName = "Petrovic",
                            Password = "7guOFkbnL2s5eA0xSepLNiQdTQ+Rj8Oe0t6HR2KpKlw=",
                            Visible = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(1043),
                            Email = "ivan@gmail.com",
                            FirstName = "Ivan",
                            LastName = "Ivanovic",
                            Password = "7guOFkbnL2s5eA0xSepLNiQdTQ+Rj8Oe0t6HR2KpKlw=",
                            Visible = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(1058),
                            Email = "nikola@gmail.com",
                            FirstName = "Nikola",
                            LastName = "Nikolic",
                            Password = "7guOFkbnL2s5eA0xSepLNiQdTQ+Rj8Oe0t6HR2KpKlw=",
                            Visible = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(1077),
                            Email = "marija@gmail.com",
                            FirstName = "Marija",
                            LastName = "Marjanovic",
                            Password = "7guOFkbnL2s5eA0xSepLNiQdTQ+Rj8Oe0t6HR2KpKlw=",
                            Visible = true
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(1090),
                            Email = "milinko@gmail.com",
                            FirstName = "Milinko",
                            LastName = "Milinkovic",
                            Password = "7guOFkbnL2s5eA0xSepLNiQdTQ+Rj8Oe0t6HR2KpKlw=",
                            Visible = true
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2020, 6, 28, 16, 12, 24, 997, DateTimeKind.Local).AddTicks(1103),
                            Email = "zdravko@gmail.com",
                            FirstName = "Zdravko",
                            LastName = "Zdravkovic",
                            Password = "7guOFkbnL2s5eA0xSepLNiQdTQ+Rj8Oe0t6HR2KpKlw=",
                            Visible = true
                        });
                });

            modelBuilder.Entity("Domain.UserUseCase", b =>
                {
                    b.Property<int>("UseCaseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UseCaseId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserUseCases");
                });

            modelBuilder.Entity("Domain.Comment", b =>
                {
                    b.HasOne("Domain.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Post", b =>
                {
                    b.HasOne("Domain.Topic", "Topic")
                        .WithMany("Posts")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Rating", b =>
                {
                    b.HasOne("Domain.Post", "Post")
                        .WithMany("Ratings")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.UseCaseLog", b =>
                {
                    b.HasOne("Domain.UseCase", "UseCase")
                        .WithMany("UseCaseLogs")
                        .HasForeignKey("UseCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("UseCaseLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.UserUseCase", b =>
                {
                    b.HasOne("Domain.UseCase", "UseCase")
                        .WithMany("UserUseCases")
                        .HasForeignKey("UseCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("UserUseCases")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
